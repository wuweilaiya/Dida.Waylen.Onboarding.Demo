// <auto-generated />
using System;
using Dida.Waylen.Onboarding.Demo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dida.Waylen.Onboarding.Demo.Service.Open.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Hotel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT")
                        .HasComment("创建者用户ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasComment("酒店描述");

                    b.Property<int>("HotelStarRating")
                        .HasColumnType("INTEGER")
                        .HasComment("酒店星级");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasComment("是否删除");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasComment("酒店名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("TEXT")
                        .HasComment("最后修改者用户ID");

                    b.HasKey("Id");

                    b.HasIndex("HotelStarRating");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name");

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasComment("主键");

                    b.Property<int>("BedType")
                        .HasColumnType("INTEGER")
                        .HasComment("床型");

                    b.Property<string>("BedTypeDescription")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("床型描述");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasComment("创建时间");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("TEXT")
                        .HasComment("创建者用户ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasComment("房间描述");

                    b.Property<long>("HotelId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false)
                        .HasComment("是否删除");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasComment("房间号码");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasComment("房型");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("房型描述");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasComment("最后修改时间");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("TEXT")
                        .HasComment("最后修改者用户ID");

                    b.HasKey("Id");

                    b.HasIndex("BedType");

                    b.HasIndex("HotelId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Type");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Hotel", b =>
                {
                    b.OwnsOne("Dida.Waylen.Onboarding.Demo.Service.Open.Data.ValueObject.Image", "Image", b1 =>
                        {
                            b1.Property<long>("HotelId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Attached")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasComment("附图");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("主图描述");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("TEXT")
                                .HasComment("主图");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.WithOwner()
                                .HasForeignKey("HotelId");
                        });

                    b.OwnsOne("Dida.Waylen.Onboarding.Demo.Service.Open.Data.ValueObject.Address", "Address", b1 =>
                        {
                            b1.Property<long>("HotelId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("城市");

                            b1.Property<string>("CityCode")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("城市编码");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("国家");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("国家编码");

                            b1.Property<string>("Detail")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("TEXT")
                                .HasComment("详细地址");

                            b1.Property<int>("Latitude")
                                .HasColumnType("INTEGER")
                                .HasComment("纬度");

                            b1.Property<int>("Longitude")
                                .HasColumnType("INTEGER")
                                .HasComment("经度");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("TEXT")
                                .HasComment("邮政编码");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("省份");

                            b1.Property<string>("ProvinceCode")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("省份编码");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("区县");

                            b1.Property<string>("RegionCode")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("区县编码");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("街道");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.WithOwner()
                                .HasForeignKey("HotelId");
                        });

                    b.OwnsOne("Dida.Waylen.Onboarding.Demo.Service.Open.Data.ValueObject.Contact", "Contact", b1 =>
                        {
                            b1.Property<long>("HotelId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("联系邮箱");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("联系电话");

                            b1.Property<string>("Website")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("TEXT")
                                .HasComment("网站");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotel");

                            b1.WithOwner()
                                .HasForeignKey("HotelId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Room", b =>
                {
                    b.HasOne("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Dida.Waylen.Onboarding.Demo.Service.Open.Data.ValueObject.Image", "Image", b1 =>
                        {
                            b1.Property<long>("RoomId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Attached")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasComment("附图");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasComment("主图描述");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("TEXT")
                                .HasComment("主图");

                            b1.HasKey("RoomId");

                            b1.ToTable("Room");

                            b1.WithOwner()
                                .HasForeignKey("RoomId");
                        });

                    b.Navigation("Hotel");

                    b.Navigation("Image")
                        .IsRequired();
                });

            modelBuilder.Entity("Dida.Waylen.Onboarding.Demo.Service.Open.Data.Entities.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
